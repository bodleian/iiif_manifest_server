<?xml version="1.0" encoding="UTF-8" ?>
<schema name="digital_bodleian" version="1.6">
    <field name="_version_" type="long" indexed="true" docValues="false" stored="true" />
    <field name="_root_" type="string" indexed="true" stored="false" />
    <field name="id" type="string" required="true" multiValued="false" />
    <field name="type" type="string" required="true" multiValued="false" />
    <field name="indexed" type="date" multiValued="false" indexed="true" />
    <field name="text" type="text_fulltext" indexed="true" termVectors="true" storeOffsetsWithPositions="true" />
    <field name="suggest" type="text_analyzed" indexed="true" stored="true" termVectors="true" multiValued="true" />
    <uniqueKey>id</uniqueKey>

    <dynamicField name="*_s" type="string" />
    <dynamicField name="*_sm" type="string" multiValued="true" />
    <dynamicField name="*_sni" type="ni_string" />
    <dynamicField name="*_smni" type="ni_string" multiValued="true" />
    <dynamicField name="*_id" type="string" />
    <dynamicField name="*_ids" type="string" multiValued="true" />
    <dynamicField name="*_uuid" type="uuid" />
    <dynamicField name="*_b" type="boolean" />
    <dynamicField name="*_i" type="int" />
    <dynamicField name="*_dt" type="date" />
    <dynamicField name="*_dtr" type="daterange" />
    <dynamicField name="*_ans" type="sort" stored="false" />

    <!-- Add a dynamic field that has fulltext query processing. useful for query-time boosting -->
    <!-- only needs to be indexed, not stored -->
    <dynamicField name="*_ft" type="text_fulltext"/>
    <dynamicField name="*_al" type="text_analyzed" stored="false" />
    <dynamicField name="*_sp" type="text_spell" stored="false" />

    <copyField source="shelfmark_s" dest="shelfmark_sort_ans" />
    <copyField source="volume_s" dest="volume_sort_ans" />
    
    <!-- add content from fields that can be used for query-time boosting -->
    <copyField source="title_s" dest="title_ft" />
    <copyField source="shelfmark_s" dest="shelfmark_ft" />
    <copyField source="work_titles_sm" dest="work_titles_ft" />
    <copyField source="people_sm" dest="people_ft" />
    <copyField source="label_s" dest="label_ft" />
    <copyField source="work_title_s" dest="work_title_ft" />
    <copyField source="description_sm" dest="description_ft" />

    <copyField source="work_titles_sm" dest="text_al" />
    <copyField source="people_sm" dest="text_al" />
    <copyField source="description_sm" dest="text_al" />
    <copyField source="label_s" dest="text_al" />
    <copyField source="subjects_sm" dest="text_al" />
    <copyField source="title_s" dest="text_al" />

    <!-- copy some fields (titles, people, etc.) for spell checking -->
    <copyField source="work_titles_sm" dest="spell_sp" />
    <copyField source="title_s" dest="spell_sp" />
    <copyField source="label_s" dest="spell_sp" />
    <copyField source="people_sm" dest="spell_sp" />
    <copyField source="subjects_sm" dest="spell_sp" />
    <copyField source="description_sm" dest="spell_sp" />

    <!-- copy people fields to an analyzed field for boosting, etc. -->
    <copyField source="people_sm" dest="people_al" />

    <fieldType name="uuid" class="solr.UUIDField" indexed="true" stored="true" docValues="true" />
    <fieldType name="string" class="solr.StrField" indexed="true" stored="true" sortMissingLast="true" docValues="true" termVectors="true" />
    <!-- use an Non-indexed string if you don't want the value of the string field to be indexed, e.g., a boilerplate rights statement that is on every record. -->
    <fieldType name="ni_string" class="solr.StrField" indexed="false" stored="true" sortMissingLast="true" />
    <fieldType name="boolean" class="solr.BoolField" indexed="true" stored="true" sortMissingLast="true" docValues="true" />
    <fieldType name="int" class="solr.IntPointField" docValues="true" sortMissingLast="true" />
    <fieldType name="long" class="solr.LongPointField" docValues="true" sortMissingLast="true" />
    <fieldType name="date" class="solr.DatePointField" sortMissingLast="true" />
    <fieldType name="daterange" class="solr.DateRangeField" sortMissingLast="true" />
    <!-- sorting for alpha-numeric values. The 'strength=secondary' argument, as I'm sure your aware, is what controls case
         insensitive matching. -->
    <fieldType name="sort" class="solr.ICUCollationField" locale="" numeric="true" strength="secondary" sortMissingLast="true" />

    <!-- text fields -->
    <fieldType name="text_fulltext" class="solr.TextField" autoGeneratePhraseQueries="true" multiValued="true" termVectors="true" stored="true">
        <analyzer type="index">
            <tokenizer class="solr.ICUTokenizerFactory" />
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.CommonGramsFilterFactory" ignoreCase="true" words="stopwords.txt" />
            <filter class="solr.KStemFilterFactory" />
            <filter class="solr.WordDelimiterGraphFilterFactory" splitOnNumerics="0" preserveOriginal="1" />
            <!-- synonym filters only need to be on index OR query, not both -->
            <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />
            <filter class="solr.FlattenGraphFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.ICUTokenizerFactory" />
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.CommonGramsQueryFilterFactory" ignoreCase="true" words="stopwords.txt" />
            <filter class="solr.KStemFilterFactory" />
            <filter class="solr.WordDelimiterGraphFilterFactory" splitOnNumerics="0" preserveOriginal="1" />
        </analyzer>
    </fieldType>

    <!-- A differently-analyzed field to use for weighting full-text searches-->
    <fieldType name="text_analyzed" class="solr.TextField" multiValued="true" positionIncrementGap="100" termVectors="true">
        <analyzer type="index">
            <!-- the standard tokenizer removes any punctuation that is followed by whitespace,
                 e.g., "ms. bodl" to "ms bodl" -->
            <tokenizer class="solr.StandardTokenizerFactory" />
            <!-- the ICUFoldingFilter standardizes unicode characters,
                 e.g., "Dāstān" to "Dastan" -->
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.LowerCaseFilterFactory" />
            <!-- shingles generate "word n-grams"; "the quick brown" to "the quick", "quick brown". -->
            <filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="5" />
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory" />
            <filter class="solr.ICUFoldingFilterFactory"/>
            <filter class="solr.LowerCaseFilterFactory" />
            <filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="5" />
        </analyzer>
    </fieldType>

    <fieldType name="text_spell" multiValued="true" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <!-- synonym filters only need to be on index OR query, not both -->
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
    </fieldType>
</schema>
